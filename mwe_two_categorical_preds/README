I'm writing to ask for help implementing a particular statistical
model in Stan. The model (hierarchical related regression, HRR) is
described in the following paper

Jackson, Christopher, Nicky Best, and Sylvia Richardson. "Hierarchical
related regression for combining aggregate and individual data in
studies of socio-economic disease risk factors." Journal of the Royal
Statistical Society: Series A 171.1 (2008): 159-178.

and there exists a reference implementation in R, in the package
ecoreg. I can replicate simple results from the package, but the model
performs very poorly (= takes a very long time per effective sample)
with anything reasonably complex.

Here is example code for a HRR which has two continuous
aggregate-level predictors (the percentage with tertiary education and
the percentage in social class AB, for the areas in my data, scaled to
have zero mean and standard deviation of one), and two categorical
predictors (gender and education). I use these predictors to model the
individual responses; I use a post-stratification frame to generate
weighted probabilities at the area level, which feeds into a model of
aggregate outcomes.

When I run this code on 1000 individual responses (632 area level
outcomes), my model takes around 170 minutes for 1,000 iterations
(effective sample size of around 370).

If I take out the aggregate level component, the model takes around
1 minute for 1,000 iterations (ESS of around 580).

If I take out the individual level component, the aggregates-only
model takes about as long as the whole model.

When I examine the pairs plot, I can see that the random effects for
education and gender show very very strong posterior
correlation. (This is true also of the individual-only model, but to a
lesser degree).

I've tried to optimize the code: with the exception of one for loop,
everything is vectorized.

I know (or I think I know) that the folk theorem doesn't apply,
because I simulated the data I'm analysing using the same model I'm
using for the analysis.

I can get results using rstan::optimizing, but the standard errors are
huge.

Any help at all would be very much appreciated.